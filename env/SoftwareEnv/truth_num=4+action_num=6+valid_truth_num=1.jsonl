{"truths": ["Event Streaming Programming", "Reactive Programming", "Constraint Programming", "Template Metaprogramming"], "actions": ["Detecting Event Listeners", "Measuring Cyclomatic Complexity", "Assessing State Mutability", "Calculating Lines of Code per Function", "Assessing Concurrency Usage Percentage", "Evaluating Type Inference"], "observations": {"Detecting Event Listeners": "No Event Listeners", "Measuring Cyclomatic Complexity": 7.25771206470011, "Assessing State Mutability": "Mixed Mutability", "Calculating Lines of Code per Function": 186.25285636569348, "Assessing Concurrency Usage Percentage": 7.99402574081021, "Evaluating Type Inference": "Weak or No Type Inference"}, "seed": 0, "valid_truth": "Template Metaprogramming"}
{"truths": ["Visual Programming", "Lazy Evaluation Paradigms", "Static Typing Paradigms", "Template Metaprogramming"], "actions": ["Evaluating Type Inference", "Detecting Lazy Evaluation", "Calculating Lines of Code per Function", "Checking for Pattern Matching", "Measuring Recursion Depth", "Assessing Concurrency Usage Percentage"], "observations": {"Evaluating Type Inference": "Weak or No Type Inference", "Detecting Lazy Evaluation": "Strict Evaluation", "Calculating Lines of Code per Function": 9.757133130482952, "Checking for Pattern Matching": "No Pattern Matching", "Measuring Recursion Depth": 4.466585212788176, "Assessing Concurrency Usage Percentage": 3.8980880702113407}, "seed": 1, "valid_truth": "Visual Programming"}
{"truths": ["Eager Evaluation Paradigms", "Parallel Programming", "Strongly Typed Languages", "Recursive Programming"], "actions": ["Examining Tail Recursion", "Detecting Lazy Evaluation", "Assessing Concurrency Usage Percentage", "Measuring Recursion Depth", "Evaluating Type Inference", "Checking for Pattern Matching"], "observations": {"Examining Tail Recursion": "Limited Tail Recursion", "Detecting Lazy Evaluation": "Lazy Evaluation Present", "Assessing Concurrency Usage Percentage": 8.036694431529348, "Measuring Recursion Depth": 4.301220513687266, "Evaluating Type Inference": "Strong Type Inference", "Checking for Pattern Matching": "No Pattern Matching"}, "seed": 2, "valid_truth": "Strongly Typed Languages"}
{"truths": ["High-Level Scripting Programming", "Event-Driven Programming", "Dataflow Programming", "Macro Programming"], "actions": ["Analyzing Class Usage", "Detecting Event Listeners", "Calculating Lines of Code per Function", "Examining Higher-Order Functions", "Examining Tail Recursion", "Measuring Cyclomatic Complexity"], "observations": {"Analyzing Class Usage": "Extensive Use of Classes", "Detecting Event Listeners": "Limited Event Listeners", "Calculating Lines of Code per Function": 19.912896710209257, "Examining Higher-Order Functions": "Rare Higher-Order Functions", "Examining Tail Recursion": "Extensive Tail Recursion", "Measuring Cyclomatic Complexity": 2.35131753761224}, "seed": 3, "valid_truth": "High-Level Scripting Programming"}
{"truths": ["Aspect-Oriented Programming", "Prototype-Based Programming", "Sequential Programming", "Dynamic Typing Paradigms"], "actions": ["Analyzing Class Usage", "Measuring Cyclomatic Complexity", "Assessing Concurrency Usage Percentage", "Evaluating Type Inference", "Assessing State Mutability", "Examining Higher-Order Functions"], "observations": {"Analyzing Class Usage": "Minimal Use of Classes", "Measuring Cyclomatic Complexity": 4.5897752154385945, "Assessing Concurrency Usage Percentage": 82.24025928312696, "Evaluating Type Inference": "Weak or No Type Inference", "Assessing State Mutability": "Mixed Mutability", "Examining Higher-Order Functions": "No Higher-Order Functions"}, "seed": 4, "valid_truth": "Dynamic Typing Paradigms"}
{"truths": ["Declarative Programming", "Template Metaprogramming", "Functional Reactive Programming", "Iterative Programming"], "actions": ["Analyzing Class Usage", "Calculating Lines of Code per Function", "Measuring Recursion Depth", "Measuring Cyclomatic Complexity", "Observing Side Effects", "Examining Higher-Order Functions"], "observations": {"Analyzing Class Usage": "Extensive Use of Classes", "Calculating Lines of Code per Function": 9.381380955643275, "Measuring Recursion Depth": 9.452019656677624, "Measuring Cyclomatic Complexity": 2.718804296179652, "Observing Side Effects": "No Side Effects", "Examining Higher-Order Functions": "Rare Higher-Order Functions"}, "seed": 5, "valid_truth": "Declarative Programming"}
{"truths": ["Lazy Evaluation Paradigms", "Parallel Programming", "Scripting Programming", "Template Metaprogramming"], "actions": ["Evaluating Type Inference", "Calculating Lines of Code per Function", "Assessing Concurrency Usage Percentage", "Detecting Lazy Evaluation", "Analyzing Use of Pointers", "Observing Side Effects"], "observations": {"Evaluating Type Inference": "Strong Type Inference", "Calculating Lines of Code per Function": 15.402796718759804, "Assessing Concurrency Usage Percentage": 2.7269808567197074, "Detecting Lazy Evaluation": "Mixed Evaluation", "Analyzing Use of Pointers": "Abstracted Pointers", "Observing Side Effects": "Controlled Side Effects"}, "seed": 6, "valid_truth": "Lazy Evaluation Paradigms"}
{"truths": ["Purely Statically Typed Programming", "Code Generation", "Constraint Programming", "Parallel Programming"], "actions": ["Evaluating Type Inference", "Measuring Cyclomatic Complexity", "Calculating Lines of Code per Function", "Assessing Concurrency Usage Percentage", "Detecting Event Listeners", "Examining Higher-Order Functions"], "observations": {"Evaluating Type Inference": "Mixed Typing", "Measuring Cyclomatic Complexity": 6.531994554710902, "Calculating Lines of Code per Function": 11.309073883861593, "Assessing Concurrency Usage Percentage": 95.32302336296638, "Detecting Event Listeners": "No Event Listeners", "Examining Higher-Order Functions": "Rare Higher-Order Functions"}, "seed": 7, "valid_truth": "Parallel Programming"}
{"truths": ["Low-Level Programming Paradigms", "Strongly Typed Languages", "Event Streaming Programming", "Visual Programming"], "actions": ["Detecting Event Listeners", "Analyzing Use of Pointers", "Calculating Lines of Code per Function", "Evaluating Type Inference", "Assessing State Mutability", "Checking for Monads"], "observations": {"Detecting Event Listeners": "No Event Listeners", "Analyzing Use of Pointers": "No Pointer Use", "Calculating Lines of Code per Function": 461.2385033670047, "Evaluating Type Inference": "Strong Type Inference", "Assessing State Mutability": "Highly Mutable State", "Checking for Monads": "Monads Present"}, "seed": 8, "valid_truth": "Strongly Typed Languages"}
{"truths": ["Managed Memory Paradigms", "Declarative Programming", "Strongly Typed Languages", "Component-Based Programming"], "actions": ["Analyzing Class Usage", "Evaluating Type Inference", "Analyzing Use of Pointers", "Observing Side Effects", "Examining Higher-Order Functions", "Measuring Recursion Depth"], "observations": {"Analyzing Class Usage": "No Use of Classes", "Evaluating Type Inference": "Weak or No Type Inference", "Analyzing Use of Pointers": "Frequent Pointer Usage", "Observing Side Effects": "Controlled Side Effects", "Examining Higher-Order Functions": "Rare Higher-Order Functions", "Measuring Recursion Depth": 1.6701200438391588}, "seed": 9, "valid_truth": "Declarative Programming"}
{"truths": ["Lazy Evaluation Paradigms", "Constraint Programming", "Array Programming", "Event-Driven Programming"], "actions": ["Detecting Event Listeners", "Measuring Cyclomatic Complexity", "Calculating Lines of Code per Function", "Detecting Lazy Evaluation", "Checking for Pattern Matching", "Evaluating Type Inference"], "observations": {"Detecting Event Listeners": "Limited Event Listeners", "Measuring Cyclomatic Complexity": 10.686024236759321, "Calculating Lines of Code per Function": 46.89405211814536, "Detecting Lazy Evaluation": "Mixed Evaluation", "Checking for Pattern Matching": "Pattern Matching Used", "Evaluating Type Inference": "Strong Type Inference"}, "seed": 10, "valid_truth": "Lazy Evaluation Paradigms"}
{"truths": ["Functional Programming", "Object-Oriented Programming", "Managed Memory Paradigms", "Purely Statically Typed Programming"], "actions": ["Evaluating Type Inference", "Examining Tail Recursion", "Analyzing Use of Pointers", "Detecting Lazy Evaluation", "Measuring Recursion Depth", "Detecting Event Listeners"], "observations": {"Evaluating Type Inference": "Mixed Typing", "Examining Tail Recursion": "No Tail Recursion", "Analyzing Use of Pointers": "Frequent Pointer Usage", "Detecting Lazy Evaluation": "Mixed Evaluation", "Measuring Recursion Depth": 2.232965763784992, "Detecting Event Listeners": "Extensive Event Listeners"}, "seed": 11, "valid_truth": "Object-Oriented Programming"}
{"truths": ["Event-Driven Programming", "Component-Based Programming", "Actor Model Programming", "Logic Programming"], "actions": ["Analyzing Class Usage", "Detecting Event Listeners", "Checking for Pattern Matching", "Measuring Cyclomatic Complexity", "Assessing Concurrency Usage Percentage", "Analyzing Use of Pointers"], "observations": {"Analyzing Class Usage": "No Use of Classes", "Detecting Event Listeners": "No Event Listeners", "Checking for Pattern Matching": "No Pattern Matching", "Measuring Cyclomatic Complexity": 3.2170437578241544, "Assessing Concurrency Usage Percentage": 51.95942676412125, "Analyzing Use of Pointers": "No Pointer Use"}, "seed": 12, "valid_truth": "Actor Model Programming"}
{"truths": ["Template Metaprogramming", "Class-Based Programming", "Imperative Programming", "Iterative Programming"], "actions": ["Checking for Monads", "Calculating Lines of Code per Function", "Measuring Recursion Depth", "Assessing State Mutability", "Examining Higher-Order Functions", "Examining Tail Recursion"], "observations": {"Checking for Monads": "Monads Present", "Calculating Lines of Code per Function": 2.6042604551951376, "Measuring Recursion Depth": 13.438406525858255, "Assessing State Mutability": "Highly Mutable State", "Examining Higher-Order Functions": "No Higher-Order Functions", "Examining Tail Recursion": "Extensive Tail Recursion"}, "seed": 13, "valid_truth": "Class-Based Programming"}
{"truths": ["Sequential Programming", "Declarative Programming", "Iterative Programming", "Logic Programming"], "actions": ["Analyzing Class Usage", "Assessing Concurrency Usage Percentage", "Measuring Recursion Depth", "Examining Higher-Order Functions", "Checking for Pattern Matching", "Measuring Cyclomatic Complexity"], "observations": {"Analyzing Class Usage": "Extensive Use of Classes", "Assessing Concurrency Usage Percentage": 51.026996806010075, "Measuring Recursion Depth": 12.532656889999387, "Examining Higher-Order Functions": "Rare Higher-Order Functions", "Checking for Pattern Matching": "Pattern Matching Used", "Measuring Cyclomatic Complexity": 89.31704587728221}, "seed": 14, "valid_truth": "Declarative Programming"}
{"truths": ["Code Generation", "High-Level Programming Paradigms", "Logic Programming", "Constraint Programming"], "actions": ["Measuring Cyclomatic Complexity", "Calculating Lines of Code per Function", "Analyzing Class Usage", "Analyzing Use of Pointers", "Checking for Pattern Matching", "Checking for Monads"], "observations": {"Measuring Cyclomatic Complexity": 9.042699815310298, "Calculating Lines of Code per Function": 14.163886659702554, "Analyzing Class Usage": "No Use of Classes", "Analyzing Use of Pointers": "Frequent Pointer Usage", "Checking for Pattern Matching": "No Pattern Matching", "Checking for Monads": "Monads Present"}, "seed": 15, "valid_truth": "High-Level Programming Paradigms"}
{"truths": ["Strongly Typed Languages", "Event-Driven Programming", "Class-Based Programming", "Reactive Programming"], "actions": ["Analyzing Class Usage", "Assessing State Mutability", "Evaluating Type Inference", "Detecting Event Listeners", "Analyzing Use of Pointers", "Checking for Pattern Matching"], "observations": {"Analyzing Class Usage": "No Use of Classes", "Assessing State Mutability": "Highly Mutable State", "Evaluating Type Inference": "Weak or No Type Inference", "Detecting Event Listeners": "Extensive Event Listeners", "Analyzing Use of Pointers": "Frequent Pointer Usage", "Checking for Pattern Matching": "Pattern Matching Used"}, "seed": 16, "valid_truth": "Event-Driven Programming"}
{"truths": ["Logic Programming", "Reactive Programming", "Prototype-Based Programming", "Strongly Typed Languages"], "actions": ["Analyzing Class Usage", "Assessing State Mutability", "Evaluating Type Inference", "Measuring Cyclomatic Complexity", "Detecting Event Listeners", "Checking for Pattern Matching"], "observations": {"Analyzing Class Usage": "Extensive Use of Classes", "Assessing State Mutability": "Highly Mutable State", "Evaluating Type Inference": "Weak or No Type Inference", "Measuring Cyclomatic Complexity": 4.075930444389402, "Detecting Event Listeners": "Extensive Event Listeners", "Checking for Pattern Matching": "No Pattern Matching"}, "seed": 17, "valid_truth": "Prototype-Based Programming"}
{"truths": ["Imperative Programming", "Minimalist Programming", "Actor Model Programming", "Functional Programming"], "actions": ["Examining Tail Recursion", "Detecting Lazy Evaluation", "Calculating Lines of Code per Function", "Analyzing Class Usage", "Assessing State Mutability", "Assessing Concurrency Usage Percentage"], "observations": {"Examining Tail Recursion": "No Tail Recursion", "Detecting Lazy Evaluation": "Lazy Evaluation Present", "Calculating Lines of Code per Function": 58.902030671703315, "Analyzing Class Usage": "No Use of Classes", "Assessing State Mutability": "Mixed Mutability", "Assessing Concurrency Usage Percentage": 51.7914692083721}, "seed": 18, "valid_truth": "Actor Model Programming"}
{"truths": ["Dynamic Typing Paradigms", "Functional Reactive Programming", "Logic Programming", "Class-Based Programming"], "actions": ["Analyzing Class Usage", "Evaluating Type Inference", "Checking for Pattern Matching", "Examining Higher-Order Functions", "Measuring Cyclomatic Complexity", "Detecting Lazy Evaluation"], "observations": {"Analyzing Class Usage": "No Use of Classes", "Evaluating Type Inference": "Strong Type Inference", "Checking for Pattern Matching": "No Pattern Matching", "Examining Higher-Order Functions": "No Higher-Order Functions", "Measuring Cyclomatic Complexity": 86.09876108945973, "Detecting Lazy Evaluation": "Strict Evaluation"}, "seed": 19, "valid_truth": "Functional Reactive Programming"}
{"truths": ["Loop-Based Paradigms", "Template Metaprogramming", "Dataflow Programming", "Sequential Programming"], "actions": ["Examining Tail Recursion", "Calculating Lines of Code per Function", "Assessing Concurrency Usage Percentage", "Examining Higher-Order Functions", "Analyzing Class Usage", "Detecting Event Listeners"], "observations": {"Examining Tail Recursion": "Extensive Tail Recursion", "Calculating Lines of Code per Function": 2.501543509831896, "Assessing Concurrency Usage Percentage": 53.22208922768742, "Examining Higher-Order Functions": "Rare Higher-Order Functions", "Analyzing Class Usage": "No Use of Classes", "Detecting Event Listeners": "Extensive Event Listeners"}, "seed": 20, "valid_truth": "Dataflow Programming"}
{"truths": ["Recursive Programming", "Reactive Programming", "Dataflow Programming", "Class-Based Programming"], "actions": ["Examining Higher-Order Functions", "Detecting Event Listeners", "Examining Tail Recursion", "Analyzing Class Usage", "Measuring Recursion Depth", "Assessing State Mutability"], "observations": {"Examining Higher-Order Functions": "No Higher-Order Functions", "Detecting Event Listeners": "No Event Listeners", "Examining Tail Recursion": "Limited Tail Recursion", "Analyzing Class Usage": "Extensive Use of Classes", "Measuring Recursion Depth": 1.855233458160539, "Assessing State Mutability": "Predominantly Immutable State"}, "seed": 21, "valid_truth": "Class-Based Programming"}
{"truths": ["Visual Programming", "Aspect-Oriented Programming", "Meta-Programming", "Declarative Programming"], "actions": ["Measuring Cyclomatic Complexity", "Calculating Lines of Code per Function", "Observing Side Effects", "Examining Higher-Order Functions", "Checking for Monads", "Evaluating Type Inference"], "observations": {"Measuring Cyclomatic Complexity": 4.880526870531674, "Calculating Lines of Code per Function": 262.04276840349104, "Observing Side Effects": "Controlled Side Effects", "Examining Higher-Order Functions": "Frequent Higher-Order Functions", "Checking for Monads": "Monads Present", "Evaluating Type Inference": "Weak or No Type Inference"}, "seed": 22, "valid_truth": "Declarative Programming"}
{"truths": ["Class-Based Programming", "Parallel Programming", "Meta-Programming", "Macro Programming"], "actions": ["Analyzing Class Usage", "Calculating Lines of Code per Function", "Assessing Concurrency Usage Percentage", "Measuring Cyclomatic Complexity", "Detecting Lazy Evaluation", "Observing Side Effects"], "observations": {"Analyzing Class Usage": "No Use of Classes", "Calculating Lines of Code per Function": 3.839943150785854, "Assessing Concurrency Usage Percentage": 4.44573573873013, "Measuring Cyclomatic Complexity": 34.567290545206404, "Detecting Lazy Evaluation": "Lazy Evaluation Present", "Observing Side Effects": "Frequent Side Effects"}, "seed": 23, "valid_truth": "Meta-Programming"}
{"truths": ["Concurrent Programming", "Recursive Programming", "Actor Model Programming", "Parallel Programming"], "actions": ["Assessing Concurrency Usage Percentage", "Measuring Recursion Depth", "Examining Tail Recursion", "Calculating Lines of Code per Function", "Measuring Cyclomatic Complexity", "Examining Higher-Order Functions"], "observations": {"Assessing Concurrency Usage Percentage": 9.581608361848446, "Measuring Recursion Depth": 16.348093970365912, "Examining Tail Recursion": "Extensive Tail Recursion", "Calculating Lines of Code per Function": 8.884146017112222, "Measuring Cyclomatic Complexity": 41.586482331005826, "Examining Higher-Order Functions": "Frequent Higher-Order Functions"}, "seed": 24, "valid_truth": "Recursive Programming"}
{"truths": ["Event Streaming Programming", "High-Level Programming Paradigms", "Code Generation", "Prototype-Based Programming"], "actions": ["Detecting Event Listeners", "Analyzing Use of Pointers", "Calculating Lines of Code per Function", "Analyzing Class Usage", "Examining Higher-Order Functions", "Observing Side Effects"], "observations": {"Detecting Event Listeners": "No Event Listeners", "Analyzing Use of Pointers": "Abstracted Pointers", "Calculating Lines of Code per Function": 1.9230102879574895, "Analyzing Class Usage": "No Use of Classes", "Examining Higher-Order Functions": "No Higher-Order Functions", "Observing Side Effects": "Controlled Side Effects"}, "seed": 25, "valid_truth": "Prototype-Based Programming"}
{"truths": ["Visual Programming", "Event-Driven Programming", "Constraint Programming", "Declarative Programming"], "actions": ["Examining Higher-Order Functions", "Measuring Cyclomatic Complexity", "Calculating Lines of Code per Function", "Detecting Event Listeners", "Observing Side Effects", "Evaluating Type Inference"], "observations": {"Examining Higher-Order Functions": "No Higher-Order Functions", "Measuring Cyclomatic Complexity": 14.745795106168119, "Calculating Lines of Code per Function": 126.88366534059784, "Detecting Event Listeners": "Extensive Event Listeners", "Observing Side Effects": "Frequent Side Effects", "Evaluating Type Inference": "Mixed Typing"}, "seed": 26, "valid_truth": "Event-Driven Programming"}
{"truths": ["Iterative Programming", "Event-Driven Programming", "Component-Based Programming", "Class-Based Programming"], "actions": ["Analyzing Class Usage", "Measuring Recursion Depth", "Detecting Event Listeners", "Observing Side Effects", "Analyzing Use of Pointers", "Examining Tail Recursion"], "observations": {"Analyzing Class Usage": "No Use of Classes", "Measuring Recursion Depth": 8.566686775309915, "Detecting Event Listeners": "Extensive Event Listeners", "Observing Side Effects": "Controlled Side Effects", "Analyzing Use of Pointers": "No Pointer Use", "Examining Tail Recursion": "Limited Tail Recursion"}, "seed": 27, "valid_truth": "Event-Driven Programming"}
{"truths": ["Low-Level Programming Paradigms", "Visual Programming", "Dataflow Programming", "Managed Memory Paradigms"], "actions": ["Analyzing Class Usage", "Analyzing Use of Pointers", "Calculating Lines of Code per Function", "Examining Higher-Order Functions", "Checking for Monads", "Checking for Pattern Matching"], "observations": {"Analyzing Class Usage": "Extensive Use of Classes", "Analyzing Use of Pointers": "No Pointer Use", "Calculating Lines of Code per Function": 646.15570271492, "Examining Higher-Order Functions": "Frequent Higher-Order Functions", "Checking for Monads": "Monads Present", "Checking for Pattern Matching": "Pattern Matching Used"}, "seed": 28, "valid_truth": "Managed Memory Paradigms"}
{"truths": ["Object-Oriented Programming", "Static Typing Paradigms", "Functional Reactive Programming", "High-Level Scripting Programming"], "actions": ["Assessing State Mutability", "Evaluating Type Inference", "Calculating Lines of Code per Function", "Observing Side Effects", "Analyzing Class Usage", "Examining Higher-Order Functions"], "observations": {"Assessing State Mutability": "Predominantly Immutable State", "Evaluating Type Inference": "Weak or No Type Inference", "Calculating Lines of Code per Function": 976.4990578746595, "Observing Side Effects": "Controlled Side Effects", "Analyzing Class Usage": "No Use of Classes", "Examining Higher-Order Functions": "Frequent Higher-Order Functions"}, "seed": 29, "valid_truth": "Functional Reactive Programming"}
{"truths": ["Immutable Data Structures Programming", "Class-Based Programming", "Declarative Programming", "Meta-Programming"], "actions": ["Examining Higher-Order Functions", "Assessing State Mutability", "Measuring Cyclomatic Complexity", "Analyzing Class Usage", "Observing Side Effects", "Evaluating Type Inference"], "observations": {"Examining Higher-Order Functions": "No Higher-Order Functions", "Assessing State Mutability": "Mixed Mutability", "Measuring Cyclomatic Complexity": 2.3076650503131253, "Analyzing Class Usage": "Minimal Use of Classes", "Observing Side Effects": "Controlled Side Effects", "Evaluating Type Inference": "Strong Type Inference"}, "seed": 30, "valid_truth": "Class-Based Programming"}
{"truths": ["High-Level Programming Paradigms", "Event-Driven Programming", "Minimalist Programming", "Dynamic Typing Paradigms"], "actions": ["Evaluating Type Inference", "Analyzing Use of Pointers", "Calculating Lines of Code per Function", "Detecting Event Listeners", "Examining Higher-Order Functions", "Measuring Cyclomatic Complexity"], "observations": {"Evaluating Type Inference": "Strong Type Inference", "Analyzing Use of Pointers": "Abstracted Pointers", "Calculating Lines of Code per Function": 80.84980634620592, "Detecting Event Listeners": "Extensive Event Listeners", "Examining Higher-Order Functions": "Frequent Higher-Order Functions", "Measuring Cyclomatic Complexity": 28.381702560663385}, "seed": 31, "valid_truth": "Event-Driven Programming"}
{"truths": ["Static Typing Paradigms", "Code Generation", "Loop-Based Paradigms", "Prototype-Based Programming"], "actions": ["Analyzing Class Usage", "Evaluating Type Inference", "Examining Tail Recursion", "Calculating Lines of Code per Function", "Examining Higher-Order Functions", "Assessing State Mutability"], "observations": {"Analyzing Class Usage": "Minimal Use of Classes", "Evaluating Type Inference": "Weak or No Type Inference", "Examining Tail Recursion": "Extensive Tail Recursion", "Calculating Lines of Code per Function": 47.09694686236054, "Examining Higher-Order Functions": "Rare Higher-Order Functions", "Assessing State Mutability": "Highly Mutable State"}, "seed": 32, "valid_truth": "Code Generation"}
{"truths": ["Lazy Evaluation Paradigms", "Recursive Programming", "Dataflow Programming", "Low-Level Programming Paradigms"], "actions": ["Examining Tail Recursion", "Detecting Lazy Evaluation", "Analyzing Use of Pointers", "Analyzing Class Usage", "Examining Higher-Order Functions", "Measuring Recursion Depth"], "observations": {"Examining Tail Recursion": "Limited Tail Recursion", "Detecting Lazy Evaluation": "Strict Evaluation", "Analyzing Use of Pointers": "No Pointer Use", "Analyzing Class Usage": "No Use of Classes", "Examining Higher-Order Functions": "Rare Higher-Order Functions", "Measuring Recursion Depth": 19.209856192923}, "seed": 33, "valid_truth": "Dataflow Programming"}
{"truths": ["Prototype-Based Programming", "Pure Functional Programming", "Sequential Programming", "Macro Programming"], "actions": ["Analyzing Class Usage", "Calculating Lines of Code per Function", "Assessing Concurrency Usage Percentage", "Observing Side Effects", "Checking for Monads", "Assessing State Mutability"], "observations": {"Analyzing Class Usage": "Minimal Use of Classes", "Calculating Lines of Code per Function": 16.024560788457578, "Assessing Concurrency Usage Percentage": 43.85906462903545, "Observing Side Effects": "No Side Effects", "Checking for Monads": "Monads Present", "Assessing State Mutability": "Predominantly Immutable State"}, "seed": 34, "valid_truth": "Pure Functional Programming"}
{"truths": ["Object-Oriented Programming", "Pure Functional Programming", "Visual Programming", "Loop-Based Paradigms"], "actions": ["Checking for Monads", "Observing Side Effects", "Examining Tail Recursion", "Checking for Pattern Matching", "Analyzing Class Usage", "Assessing State Mutability"], "observations": {"Checking for Monads": "No Monads Detected", "Observing Side Effects": "No Side Effects", "Examining Tail Recursion": "Extensive Tail Recursion", "Checking for Pattern Matching": "Pattern Matching Used", "Analyzing Class Usage": "No Use of Classes", "Assessing State Mutability": "Highly Mutable State"}, "seed": 35, "valid_truth": "Visual Programming"}
{"truths": ["Pure Functional Programming", "Eager Evaluation Paradigms", "Meta-Programming", "Class-Based Programming"], "actions": ["Analyzing Class Usage", "Detecting Lazy Evaluation", "Measuring Cyclomatic Complexity", "Observing Side Effects", "Assessing State Mutability", "Checking for Monads"], "observations": {"Analyzing Class Usage": "No Use of Classes", "Detecting Lazy Evaluation": "Lazy Evaluation Present", "Measuring Cyclomatic Complexity": 2.800440835508974, "Observing Side Effects": "Frequent Side Effects", "Assessing State Mutability": "Highly Mutable State", "Checking for Monads": "Monads Present"}, "seed": 36, "valid_truth": "Pure Functional Programming"}
{"truths": ["High-Level Scripting Programming", "Parallel Programming", "Declarative Programming", "Actor Model Programming"], "actions": ["Examining Higher-Order Functions", "Assessing Concurrency Usage Percentage", "Calculating Lines of Code per Function", "Observing Side Effects", "Detecting Lazy Evaluation", "Measuring Cyclomatic Complexity"], "observations": {"Examining Higher-Order Functions": "No Higher-Order Functions", "Assessing Concurrency Usage Percentage": 9.730666558156276, "Calculating Lines of Code per Function": 8.464580393415309, "Observing Side Effects": "Frequent Side Effects", "Detecting Lazy Evaluation": "Strict Evaluation", "Measuring Cyclomatic Complexity": 7.2995799529295}, "seed": 37, "valid_truth": "High-Level Scripting Programming"}
{"truths": ["Dataflow Programming", "Reactive Programming", "Array Programming", "Sequential Programming"], "actions": ["Assessing State Mutability", "Calculating Lines of Code per Function", "Assessing Concurrency Usage Percentage", "Analyzing Class Usage", "Detecting Event Listeners", "Examining Higher-Order Functions"], "observations": {"Assessing State Mutability": "Highly Mutable State", "Calculating Lines of Code per Function": 67.65820589826106, "Assessing Concurrency Usage Percentage": 40.19543916553061, "Analyzing Class Usage": "Minimal Use of Classes", "Detecting Event Listeners": "No Event Listeners", "Examining Higher-Order Functions": "Frequent Higher-Order Functions"}, "seed": 38, "valid_truth": "Dataflow Programming"}
{"truths": ["Strongly Typed Languages", "High-Level Programming Paradigms", "Sequential Programming", "Array Programming"], "actions": ["Evaluating Type Inference", "Analyzing Use of Pointers", "Calculating Lines of Code per Function", "Assessing Concurrency Usage Percentage", "Examining Tail Recursion", "Detecting Lazy Evaluation"], "observations": {"Evaluating Type Inference": "Weak or No Type Inference", "Analyzing Use of Pointers": "Abstracted Pointers", "Calculating Lines of Code per Function": 42.09486722634183, "Assessing Concurrency Usage Percentage": 0.665995214892392, "Examining Tail Recursion": "No Tail Recursion", "Detecting Lazy Evaluation": "Strict Evaluation"}, "seed": 39, "valid_truth": "Sequential Programming"}
{"truths": ["Managed Memory Paradigms", "Macro Programming", "Logic Programming", "Constraint Programming"], "actions": ["Analyzing Use of Pointers", "Measuring Cyclomatic Complexity", "Analyzing Class Usage", "Calculating Lines of Code per Function", "Checking for Pattern Matching", "Examining Higher-Order Functions"], "observations": {"Analyzing Use of Pointers": "Frequent Pointer Usage", "Measuring Cyclomatic Complexity": 14.065635037643764, "Analyzing Class Usage": "Minimal Use of Classes", "Calculating Lines of Code per Function": 217.75679199635036, "Checking for Pattern Matching": "No Pattern Matching", "Examining Higher-Order Functions": "No Higher-Order Functions"}, "seed": 40, "valid_truth": "Macro Programming"}
{"truths": ["Event Streaming Programming", "Pure Functional Programming", "Low-Level Programming Paradigms", "Recursive Programming"], "actions": ["Assessing State Mutability", "Detecting Event Listeners", "Analyzing Use of Pointers", "Examining Tail Recursion", "Measuring Recursion Depth", "Checking for Monads"], "observations": {"Assessing State Mutability": "Mixed Mutability", "Detecting Event Listeners": "No Event Listeners", "Analyzing Use of Pointers": "No Pointer Use", "Examining Tail Recursion": "Extensive Tail Recursion", "Measuring Recursion Depth": 15.262133613003902, "Checking for Monads": "Monads Present"}, "seed": 41, "valid_truth": "Recursive Programming"}
{"truths": ["Dataflow Programming", "Minimalist Programming", "Meta-Programming", "Component-Based Programming"], "actions": ["Analyzing Class Usage", "Examining Higher-Order Functions", "Measuring Cyclomatic Complexity", "Calculating Lines of Code per Function", "Detecting Event Listeners", "Analyzing Use of Pointers"], "observations": {"Analyzing Class Usage": "No Use of Classes", "Examining Higher-Order Functions": "No Higher-Order Functions", "Measuring Cyclomatic Complexity": 2.1096090984263522, "Calculating Lines of Code per Function": 0.5959443887614069, "Detecting Event Listeners": "Extensive Event Listeners", "Analyzing Use of Pointers": "Abstracted Pointers"}, "seed": 42, "valid_truth": "Minimalist Programming"}
{"truths": ["Constraint Programming", "Class-Based Programming", "Loop-Based Paradigms", "Managed Memory Paradigms"], "actions": ["Analyzing Class Usage", "Analyzing Use of Pointers", "Measuring Cyclomatic Complexity", "Examining Tail Recursion", "Assessing Concurrency Usage Percentage", "Detecting Lazy Evaluation"], "observations": {"Analyzing Class Usage": "No Use of Classes", "Analyzing Use of Pointers": "Frequent Pointer Usage", "Measuring Cyclomatic Complexity": 9.891499550562962, "Examining Tail Recursion": "No Tail Recursion", "Assessing Concurrency Usage Percentage": 3.7237468082092615, "Detecting Lazy Evaluation": "Mixed Evaluation"}, "seed": 43, "valid_truth": "Loop-Based Paradigms"}
{"truths": ["Reactive Programming", "Logic Programming", "Immutable Data Structures Programming", "Minimalist Programming"], "actions": ["Assessing State Mutability", "Detecting Event Listeners", "Calculating Lines of Code per Function", "Analyzing Class Usage", "Measuring Cyclomatic Complexity", "Checking for Pattern Matching"], "observations": {"Assessing State Mutability": "Mixed Mutability", "Detecting Event Listeners": "No Event Listeners", "Calculating Lines of Code per Function": 65.92644659203026, "Analyzing Class Usage": "Minimal Use of Classes", "Measuring Cyclomatic Complexity": 0.5009005277115974, "Checking for Pattern Matching": "Pattern Matching Used"}, "seed": 44, "valid_truth": "Logic Programming"}
{"truths": ["Component-Based Programming", "Reactive Programming", "Scripting Programming", "Template Metaprogramming"], "actions": ["Assessing State Mutability", "Evaluating Type Inference", "Calculating Lines of Code per Function", "Detecting Event Listeners", "Analyzing Use of Pointers", "Analyzing Class Usage"], "observations": {"Assessing State Mutability": "Highly Mutable State", "Evaluating Type Inference": "Strong Type Inference", "Calculating Lines of Code per Function": 2.2967635518089358, "Detecting Event Listeners": "Extensive Event Listeners", "Analyzing Use of Pointers": "No Pointer Use", "Analyzing Class Usage": "Extensive Use of Classes"}, "seed": 45, "valid_truth": "Component-Based Programming"}
{"truths": ["Static Typing Paradigms", "Dynamic Typing Paradigms", "Constraint Programming", "Macro Programming"], "actions": ["Evaluating Type Inference", "Measuring Cyclomatic Complexity", "Calculating Lines of Code per Function", "Assessing Concurrency Usage Percentage", "Detecting Lazy Evaluation", "Assessing State Mutability"], "observations": {"Evaluating Type Inference": "Weak or No Type Inference", "Measuring Cyclomatic Complexity": 13.048406167930047, "Calculating Lines of Code per Function": 12.64322501794875, "Assessing Concurrency Usage Percentage": 0.5445831152163139, "Detecting Lazy Evaluation": "Lazy Evaluation Present", "Assessing State Mutability": "Predominantly Immutable State"}, "seed": 46, "valid_truth": "Dynamic Typing Paradigms"}
{"truths": ["Functional Reactive Programming", "Static Typing Paradigms", "Array Programming", "Object-Oriented Programming"], "actions": ["Analyzing Class Usage", "Evaluating Type Inference", "Calculating Lines of Code per Function", "Checking for Pattern Matching", "Examining Higher-Order Functions", "Assessing State Mutability"], "observations": {"Analyzing Class Usage": "Extensive Use of Classes", "Evaluating Type Inference": "Weak or No Type Inference", "Calculating Lines of Code per Function": 83.81153497892674, "Checking for Pattern Matching": "No Pattern Matching", "Examining Higher-Order Functions": "No Higher-Order Functions", "Assessing State Mutability": "Mixed Mutability"}, "seed": 47, "valid_truth": "Object-Oriented Programming"}
{"truths": ["Object-Oriented Programming", "Procedural Programming", "Visual Programming", "Immutable Data Structures Programming"], "actions": ["Assessing State Mutability", "Observing Side Effects", "Assessing Concurrency Usage Percentage", "Calculating Lines of Code per Function", "Detecting Event Listeners", "Measuring Recursion Depth"], "observations": {"Assessing State Mutability": "Mixed Mutability", "Observing Side Effects": "No Side Effects", "Assessing Concurrency Usage Percentage": 4.930803004601333, "Calculating Lines of Code per Function": 4.407997610874375, "Detecting Event Listeners": "No Event Listeners", "Measuring Recursion Depth": 3.8113137152642156}, "seed": 48, "valid_truth": "Visual Programming"}
{"truths": ["Static Typing Paradigms", "Functional Reactive Programming", "Reactive Programming", "Minimalist Programming"], "actions": ["Analyzing Class Usage", "Evaluating Type Inference", "Calculating Lines of Code per Function", "Measuring Cyclomatic Complexity", "Detecting Event Listeners", "Assessing State Mutability"], "observations": {"Analyzing Class Usage": "Extensive Use of Classes", "Evaluating Type Inference": "Weak or No Type Inference", "Calculating Lines of Code per Function": 56.93085750912015, "Measuring Cyclomatic Complexity": 19.813281304815945, "Detecting Event Listeners": "Extensive Event Listeners", "Assessing State Mutability": "Predominantly Immutable State"}, "seed": 49, "valid_truth": "Reactive Programming"}
