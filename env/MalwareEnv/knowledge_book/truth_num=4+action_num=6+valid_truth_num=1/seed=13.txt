# Malware Analysis Guidebook

Malware, short for malicious software, is designed by cybercriminals to perform unwanted actions on a user's system. Understanding different types of malware and the methods to detect them is crucial in protecting computer systems. This guidebook introduces several common malware types and outlines specific detection methods to help identify and rule out these threats effectively.

## Malware Types

### Trojan Horse

Trojan Horse is a type of malware that disguises itself as legitimate software to trick users into executing it. Once activated, it can grant unauthorized access to the user's system, leading to data theft or damage.

### Polymorphic Virus

A Polymorphic Virus is a sophisticated type of malware that constantly changes its identifiable features, such as its code, to evade detection by security software. It achieves this through encryption and decryption techniques, making it challenging to identify using traditional virus detection methods.

### Password Stealer

Password Stealers are designed to capture and transmit passwords and other sensitive data from a victim's system. They often operate silently, collecting login credentials to be exploited for unauthorized access to accounts and data.

### Browser Hijacker

Browser Hijackers modify a user's web browser settings without permission, redirecting the user to unwanted websites. They often change the homepage, default search engine, and new tab page, ultimately attempting to generate ad revenue or conduct phishing attacks.

## Detection Methods

### Registry Analysis

This method involves examining the Windows Registry for unusual changes. The outcomes of a registry analysis can help rule out certain malware types based on observed modifications:
- **No Registry Changes**: This outcome does not rule out any particular malware type.
- **Startup Entries Modified**: If found, it rules out the possibility of a Browser Hijacker being present.
- **Registry Keys Missing**: This outcome does not rule out any particular malware type.

### API Call Analysis

API Call Analysis looks for suspicious API calls that may indicate malicious activity:
- **Suspicious API Calls**: If such calls are detected, a Password Stealer can be ruled out.
- **Normal API Usage**: This indicates no abnormal activity and does not rule out any specific malware.
- **API Hooking Detected**: This outcome does not rule out any particular malware type.

### Email Header Analysis

Email Header Analysis involves checking email metadata for signs of phishing or other malicious activities:
- **No Malicious Emails**: If no threats are found, a Trojan Horse can be ruled out.
- **Spoofed Sender Detected**: This outcome does not rule out any particular malware type.
- **Suspicious Attachments**: If attachments are flagged as suspicious, a Trojan Horse can be ruled out.

### Anomaly Detection

Anomaly Detection uses statistical analysis to identify deviations from normal behavior:
- **(0.0, 0.4)**: A low anomaly score allows you to rule out the Polymorphic Virus.
- **(0.41, 0.7)**: A moderate score suggests ruling out a Trojan Horse.
- **(0.71, 1.0)**: The highest range does not specify any exclusions.

### YARA Rule Matching

YARA rules are signatures used to identify malware based on specific patterns:
- **No Rules Matched**: This outcome does not rule out any particular malware type.
- **Known Malware Matched**: No exclusions are implied by this outcome.
- **Suspicious Patterns Matched**: If matched, a Polymorphic Virus can be ruled out.

### Compression and Encryption Detection

This method checks for the presence of compression or encryption, often used by malware to conceal its presence:
- **No Compression/Encryption**: If files are unmodified, a Trojan Horse can be ruled out.
- **Compressed Files Detected**: This outcome does not rule out any particular malware type.
- **Encrypted Payload Found**: Finding encryption rules out the presence of a Polymorphic Virus.

By understanding these malware types and detection outcomes, analysts can more effectively discern which threats are not present in a given system, thereby streamlining the process of malware identification and mitigation.